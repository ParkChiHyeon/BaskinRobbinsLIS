<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.br.lis.model.purchaseinfo.mapper.RequestPurchaseDaoImpl">


<!-- 신청도서 조회(BR_W_BM_501) : 제목으로 조회-->
<select id="purchSelectByTitle" parameterType="java.lang.String" resultType="BookInfoVo">
	SELECT * FROM BOOK_INFO bi WHERE TITLE = #{title}
</select>


<!-- 신청도서 조회(BR_W_BM_501) : 출판사로 조회-->
<select id="purchSelectByPublisher" parameterType="java.lang.String" resultType="BookInfoVo">
	SELECT * FROM BOOK_INFO bi WHERE PUBLISHER  = #{publisher}
</select>


<!-- 신청도서 신청(BR_W_BM_502) -->
<insert id="purchRequestInsert" parameterType="java.util.Map">		  
	INSERT INTO REQUEST_PURCHASE
		(WISH_SERIAL, MEMBER_ID, PURCHASE_CODE, ISBN, TITLE, PUBLISHER, AUTHOR, TRANSLATOR, PRICE, EA, CONFIRM)
	VALUES('PW'||TO_CHAR(CURRENT_DATE,'YYMM')||WISH_SEQ.NEXTVAL, #{member_id},
		(SELECT PURCHASE_CODE FROM PURCHASE p WHERE PURCHASE_CODE = ('P'||TO_CHAR(CURRENT_DATE , 'YYMM'))),
		#{isbn}, #{title}, #{publisher}, #{author}, #{translator}, #{price}, 1, 'Y')
</insert>

<!-- 신청도서 신청(BR_W_BM_502) : 신청도서 월 1회만 신청하기 위한 쿼리(해당 구매 월에 MEMBER_ID가 있다면 신청하지 못함) -->
<select id="purchReqOnceAMonth" resultType="RequestPurchaseVo">
	SELECT MEMBER_ID
		FROM REQUEST_PURCHASE rp
			WHERE PURCHASE_CODE = ('P'||TO_CHAR(CURRENT_DATE , 'YYMM'))
</select>

<!-- 신청도서 신청(BR_W_BM_502) : 한 권의 책을 중복 신청하는 것을 방지하기 위한 쿼리 (NULL이 아닐 경우 신청 불가)-->
<select id="purchReqOncePerBook" parameterType="java.lang.String" resultType="RequestPurchaseVo">
	SELECT ISBN 
		FROM (SELECT * FROM REQUEST_PURCHASE rp WHERE PURCHASE_CODE = ('P'||TO_CHAR(CURRENT_DATE , 'YYMM'))) rp
			WHERE ISBN = #{isbn}
</select>



<!-- 신청도서 신청목록 조회(BR_W_BM_503) : 사용자가 신청한 도서의 목록을 조회할 수 있다. 구매코드로 조회 -->
<select id="purchReqListSelectByCode" parameterType="java.util.Map" resultType="RequestPurchaseVo">
	SELECT * FROM REQUEST_PURCHASE
		WHERE ${searchKey} = #{searchValue}
			ORDER BY WISH_SERIAL DESC 

<!-- 50개까지만 값이 나옴 -->
<!-- 			OFFSET 0 ROWS FETCH NEXT 50 ROWS ONLY  -->
</select>

<!-- 위에거랑 합침 -->
<!-- 신청도서 신청목록 조회(BR_W_BM_503) : 사용자가 신청한 도서의 목록을 조회할 수 있다. 사용자 ID로 조회 -->
<!-- <select id="purchReqListSelectById" parameterType="java.lang.String" resultType="RequestPurchaseVo"> -->
<!-- 	SELECT * FROM REQUEST_PURCHASE rp -->
<!-- 		WHERE MEMBER_ID = #{member_id} -->
<!-- 			ORDER BY WISH_SERIAL DESC -->
<!-- </select> -->



<!-- 신청도서 상태조회(BR_W_BM_504) : 사용자는 자신이 신청한 도서의 구매여부(승인이 됐는지)를 조회할 수 있다.(로그인 된 사용자의 것만 조회) -->
<select id="purchReqConfirmSelect" parameterType="java.lang.String" resultType="RequestPurchaseVo">
	SELECT TITLE , PUBLISHER, AUTHOR, CONFIRM
		FROM REQUEST_PURCHASE rp
			WHERE MEMBER_ID = #{member_id}
		 	ORDER BY WISH_SERIAL DESC
		 		OFFSET 0 ROWS FETCH NEXT 50 ROWS ONLY
		 	
</select>

<!-- 신청도서 알림관리(BR_W_BM_505) : 신청도서 중 구매승인이 된 도서에 한하여 신청한 사용자에게 알린다. -->
<select id="purchReqPhoneSelect" parameterType="java.lang.String" resultType="LibMemberVo">
	SELECT PHONE FROM LIB_MEMBER WHERE MEMBER_ID = #{member_id}
</select>


<!-- 신청도서 전체목록 조회(BR_W_BM_506) : 신청도서 중 구매 승인이 된 도서의 목록을 조회한다(리스트 전체조회). -->
<select id="purchReqConfirmYList" parameterType="java.lang.String" resultType="RequestPurchaseVo">
	SELECT *
		FROM REQUEST_PURCHASE rp 
			WHERE CONFIRM ='Y' AND PURCHASE_CODE = #{purchase_code}
</select>


</mapper>

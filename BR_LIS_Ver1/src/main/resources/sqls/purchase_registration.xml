<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.br.lis.model.purchaseinfo.mapper.PurchaseRegistrationDaoImpl">

<!-- 구매도서등록(BR_W_BM_701) : 보유도서에 삽입 -->
<insert id="insertPurchaseBook" parameterType="java.lang.String">
	INSERT INTO ADMIN.POSSESSING_BOOK
		(BOOK_SERIAL, ISBN, LD, RV, DL, BA, OD, SP, DG, NM, WH, REGDATE)
	VALUES('BKSR'||BKSR_SEQ.NEXTVAL, #{isbn}, 'N' , 'N' , 'N' , 'Y' , 'N' , 'N' , 'Y' , 'Y' , 'N' , CURRENT_DATE)
</insert>

<!-- 구매도서등록(BR_W_BM_701) : 보유도서의 책 갯수와 일치하도록 업데이트 -->
<update id="updateBookCount" parameterType="java.lang.String">
	UPDATE ADMIN.BOOK_INFO
		SET TOTAL_COUNT=(SELECT COUNT(ISBN) FROM POSSESSING_BOOK pb WHERE ISBN= #{isbn})
			WHERE ISBN = #{isbn}
</update>

<!-- 신규도서조회(BR_W_BM_702) : (관리자) 등록된 도서 중 현재월로부터 등록일이 한 달 이내인 도서를 조회 -->
<select id="selectNewBookAdmin" resultType="Possessing_BookVo">
	SELECT * FROM POSSESSING_BOOK pb WHERE REGDATE BETWEEN (SYSDATE-30) AND SYSDATE
</select>

<!-- 신규도서조회(BR_W_BM_702) : (사용자) 선택된 ISBN으로 등록일이 한 달 이내인 도서정보를 조회 -->
<select id="selectNewBookUser" resultType="BookInfoVo">
	SELECT bi.TITLE, bi.PUBLISHER , bi.AUTHOR
		FROM BOOK_INFO bi
			LEFT OUTER JOIN (SELECT * FROM POSSESSING_BOOK WHERE REGDATE BETWEEN (SYSDATE-30) AND SYSDATE) pb
			 ON bi.ISBN = pb.ISBN
				WHERE pb.ISBN IS NOT NULL
</select>

<!-- 등록취소(BR_W_BM_707) :  입고일이 없는 것 조회(신청구매) -->
<select id="selectReqHistory" parameterType="java.lang.String" resultType="RequestPurchaseVo">
	SELECT * FROM REQUEST_PURCHASE WHERE RECEIVE_DATE IS NULL
		AND PURCHASE_CODE = #{purchase_code} AND HISTORY IS NULL
</select>

<!-- 등록취소(BR_W_BM_707) :  도서 목록에서 history 업데이트(신청구매) -->
<update id="updateReqHistory" parameterType="java.util.Map">
	UPDATE REQUEST_PURCHASE 
		SET HISTORY = #{history}
			WHERE WISH_SERIAL = #{wish_serial}
</update>

<!-- 등록취소(BR_W_BM_707) :  입고일이 없는 것 조회(정기구매) -->
<select id="selectRegulHistory" parameterType="java.lang.String" resultType="RegularPurchaseVo">
	SELECT * FROM REGULAR_PURCHASE WHERE RECEIVE_DATE IS NULL
		AND PURCHASE_CODE = #{purchase_code} AND HISTORY IS NULL
</select>

<!-- 등록취소(BR_W_BM_707) :  도서 목록에서 history 업데이트(정기구매) -->
<update id="updateRegulHistory" parameterType="java.util.Map">
	UPDATE REGULAR_PURCHASE 
		SET HISTORY = #{history}
			WHERE REGULAR_SERIAL = #{regular_serial}
</update>

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.br.lis.model.lendinginfo.mapper.LendingBookDaoImpl">

<resultMap type="com.br.lis.vo.LendingVo" id="LendingMap">
	<id property="lending_seq" column="lending_seq"/>
	<id property="book_serial" column="book_serial"/>
	<id property="member_code" column="member_code"/>
	<id property="lending_delay" column="lending_delay"/>
	<id property="lending_date" column="lending_date"/>
	<id property="end_date" column="end_date"/>
	<id property="back_date" column="back_date"/>
</resultMap>

<resultMap type="com.br.lis.vo.BookInfoVo" id="BookInfoMap">
	<id property="isbn" column="isbn"/>
	<id property="title" column="title"/>
	<id property="publisher" column="publisher"/>
	<id property="author" column="author"/>
	<id property="book_serial" column="book_serial"/>
</resultMap>

<resultMap type="com.br.lis.vo.Possessing_BookVo" id="Possessing_BookMap">
	<id property="book_serial" column="book_serial"/>
	<id property="isbn" column="isbn"/>
	<id property="rv" column="rv"/>
</resultMap>

<resultMap type="com.br.lis.vo.LendBookBean" id="LendBookBeanMap">
	<collection property="lending" resultMap="LendingMap"/>
	<collection property="bookInfo" resultMap="BookInfoMap"/>
	<collection property="possessing_Book" resultMap="Possessing_BookMap"/>
	
</resultMap>


<!-- BR_W_BM_201  즉시대출도서 -->
<select id="nowLendingBook" resultType="LendingVo">
SELECT BOOK_SERIAL ,ISBN ,LD ,RV 
	FROM POSSESSING_BOOK pb 
	WHERE LD ='N' AND RV ='N'
</select>

<!-- BR_W_BM_202  예약목록전체조회-->
<!-- <select id="allReserveLending" resultType="BookInfoVo"> -->
<!-- SELECT  BOOK_SERIAL ,ISBN ,LD ,RV  -->
<!-- 	FROM POSSESSING_BOOK pb  -->
<!-- 		WHERE RV ='Y' AND LD ='Y' -->
<select id="allReserveLending"  parameterType="java.util.Map" resultType="com.br.lis.vo.LendBookBean">
SELECT l.MEMBER_CODE,bi.ISBN,l.BOOK_SERIAL ,l.LENDING_SEQ ,bi.TITLE,bi.PUBLISHER,bi.author
      FROM LENDING l 
      JOIN POSSESSING_BOOK pb 
    ON l.BOOK_SERIAL = pb.BOOK_SERIAL 
      JOIN BOOK_INFO bi 
      ON pb.ISBN = bi.ISBN 
      WHERE  RV ='Y'	AND  RESERVE_DATE  BETWEEN SYSDATE -15 AND SYSDATE 
      ORDER BY LENDING_SEQ DESC	
</select>

<!--BR_W_BM_203 회원예약목록조회  _회원
	** 테이블 3개 조인..!   -->
<select id="reserveLendingBook"  parameterType="java.lang.String" resultType="java.util.Map">
SELECT l.MEMBER_CODE,bi.ISBN ,pb.BOOK_SERIAL,l.LENDING_SEQ ,bi.TITLE,bi.PUBLISHER,bi.author,pb.RV ,l.reserve_date
      FROM LENDING l 
      JOIN POSSESSING_BOOK pb 
  	  ON l.BOOK_SERIAL = pb.BOOK_SERIAL 
      JOIN BOOK_INFO bi 
      ON pb.ISBN = bi.ISBN 
      WHERE l.MEMBER_CODE = #{member_code} AND RV ='Y'
</select>


<!--BR_W_BM_204  대출 신청	-->
<insert id="insertLendingBook" parameterType="LendingVo">
	INSERT INTO LENDING
		(LENDING_SEQ, BOOK_SERIAL, MEMBER_CODE, lending_delay,RETURN_STATUS, LENDING_DATE, END_DATE, BACK_DATE,reserve_date)
		VALUES('LEN'||TO_CHAR(SYSDATE,'YYMMDD')||LPAD(LENDING_SEQ.NEXTVAL,9,0),#{book_serial}, #{member_code},'Y','NM', SYSDATE, SYSDATE+14, '','')
</insert>

<!--BR_W_BM_204  대출 신청_상태변경	-->
<update id="insertLendingBookUpdate">
	UPDATE POSSESSING_BOOK SET LD ='Y'  , DG ='N'  WHERE BOOK_SERIAL =#{book_serial}
</update>

<!-- BR_W_BM_205  도서연체 패널티 -->
<select id="deleyPenalty" parameterType="LibMemberVo">
	SELECT *FROM LIB_MEMBER lm WHERE MEMBER_CODE =#{member_code} AND PENALTY  !=NULL
</select>

<!--BR_W_BM_207 대출 내역 조회 
	조인 쿼리-->
<!-- <select id="lendingList"  parameterType="java.util.Map" resultMap="LendBookBeanMap"> -->
<select id="lendingList"  parameterType="java.util.Map" resultType="com.br.lis.vo.LendBookBean">
	SELECT l.MEMBER_CODE, l.LENDING_SEQ, A.TITLE,A.AUTHOR, l.LENDING_DELAY, l.LENDING_DATE, l.END_DATE, l.BACK_DATE 
        FROM (SELECT *FROM BOOK_INFO bi, POSSESSING_BOOK pb WHERE bi.ISBN=pb.ISBN) A, LENDING l 
            WHERE l.MEMBER_CODE =#{member_code} AND l.BOOK_SERIAL=A.BOOK_SERIAL
            ORDER BY LENDING_DATE DESC
</select>

<!-- 추가  : 예약전 도서선택후 ISBN으로 대출중이고 예약이 안된책의 빠른대출일 조회
			   BOOK_SERIAL의 결과값으로 대출예약 신청을 해야함 -->
<select id="possibleReserve" parameterType="java.util.Map" resultType="com.br.lis.vo.LendBookBean">
	
	SELECT pb.RV ,pb.LD , bi.ISBN, pb.BOOK_SERIAL, l.LENDING_SEQ , l.MEMBER_CODE , l.BOOK_SERIAL , l.END_DATE
	FROM POSSESSING_BOOK pb 
	LEFT OUTER JOIN LENDING l 
	ON pb.BOOK_SERIAL =l.BOOK_SERIAL 
	LEFT OUTER JOIN BOOK_INFO bi 
	ON bi.ISBN = pb.ISBN 
	WHERE pb.ISBN =#{isbn} AND pb.RV ='N' AND pb.LD='Y' <![CDATA[AND rownum<=1]]>
	ORDER BY l.END_DATE ASC
</select>

<!--BR_W_BM_208   대출예약 신청-->
<select id="reservationBook" parameterType="LendingVo">
	INSERT INTO LENDING
		(LENDING_SEQ, BOOK_SERIAL, MEMBER_CODE, LENDING_DELAY, RETURN_STATUS, LENDING_DATE, END_DATE, BACK_DATE, RESERVE_DATE)
		VALUES('LEN'||TO_CHAR(SYSDATE,'YYMMDD')||LPAD(LENDING_SEQ.NEXTVAL,9,0), #{book_serial}, #{member_code},'','','','','', SYSDATE)
</select>

<!--BR_W_BM_208   대출예약 신청후 상태변경-->
<update id="reservationBookUpdate"  parameterType="java.lang.String">
	UPDATE POSSESSING_BOOK SET RV  ='Y'  , DG ='N'  WHERE BOOK_SERIAL =#{book_serial}
</update>

<!--BR_W_BM_209  예약후 대출확정 -->
<update id="realReserBook" parameterType="java.lang.String">
	UPDATE LENDING SET LENDING_DELAY ='Y' ,RETURN_STATUS ='NM', LENDING_DATE =SYSDATE ,END_DATE =SYSDATE +14 
		WHERE LENDING_SEQ  = #{lending_seq}
</update>

<!--BR_W_BM_209  예약후 대출확정 상태변경 -->
<update id="realReserBookUpdate"  parameterType="java.lang.String">
	UPDATE POSSESSING_BOOK SET LD  ='Y'  , RV  ='N'  WHERE BOOK_SERIAL =#{book_serial}
</update>

<!--BR_W_BM_210  반납일이 빠른도서 조회-->
<select id="fastReturnDayBook" resultType="LendingVo">
	SELECT *FROM LENDING l WHERE BOOK_SERIAL =#{book_serial} ORDER BY BACK_DATE 
</select>

<!-- BR_W_BM_211  대출예약 자동취소-->
<delete id="reserveAutoDel" >
	DELETE FROM  LENDING 	<![CDATA[
	WHERE LENDING_SEQ =#{lending_seq} AND RESERVE_DATE < RESERVE_DATE  +3
	]]>
</delete>

<!-- BR_W_BM_212  대출예약 취소-->
<delete id="reserveSelfDel" >
	DELETE FROM  LENDING WHERE LENDING_SEQ =#{lending_seq}
</delete>

<!-- BR_W_BM_211-2  대출예약 취소 상태변경-->
<update id="reserveDelUpdate">
UPDATE POSSESSING_BOOK SET  RV  ='N' ,DG='Y' WHERE BOOK_SERIAL =#{book_serial}
</update>

<!-- BR_W_BM_213 대여가능권수-->
<update id="lendingCount">
 <![CDATA[ 
	 UPDATE LIB_MEMBER SET RENTAL_COUNT = (SELECT CASE WHEN (RENTAL_COUNT) < 5 THEN (RENTAL_COUNT)+1  
	 																		   WHEN (RENTAL_COUNT) = 5 THEN RENTAL_COUNT
	 																		  END FROM LIB_MEMBER lm  WHERE MEMBER_CODE =#{member_code} )
	 WHERE MEMBER_CODE =#{member_code}
	]]>
</update>



</mapper>
